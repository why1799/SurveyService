@model Survey
@{
    ViewData["Title"] = "Опрос";
}
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<style>
    .contentBox div:nth-child(n + 2) {
        border-top-style: groove;
        border-top-width: thin;
    }

    input[type=text] {
        transition: 0.6s;
        border: none;
        border-bottom: 1px solid #CCC;
        background-color: transparent;
    }
</style>
<div>
    <h2 style="text-align: center;">@Model.Title</h2>
    <form id="questonForm" asp-controller="Survey" asp-action="SetResult" method="post">
        <div class="contentBox" style="border-style: groove; border-width: thin;">
            @foreach (var question in Model.SurveyQuestion)
            {
                <div style="padding: 15px 30px;">
                    <div style="font-size:18px">
                        @question.QuestionText@if (question.IsRequired)
                        {
                            <span class="IsRequired" id="@question.Id" style="color:red;">*</span>
                        }
                    </div>

                    <ul class="list-unstyled">
                        @switch (question.Type)
                        {
                            case 0: /*Радиобаттон*/
                                {
                                    @foreach (var Option in question.Options)
                                    {
                                        <li>
                                            <input type="radio" name=@question.Id value=@Option.Id
                                                   @(question.UserAnswers?.SingleOrDefault()?.OptionsForAnswers?.Any(ob => ob.OptionId == Option.Id) == true ? "checked" : "")
                                                   @(question.IsRequired == true ? "data-val-required = The IsSelected field is required. data-rule-customv = " + question.Id + " class=input-validation-error" : "") />
                                            <span>@Option.Text</span>
                                        </li>
                                    }
                                    @if (question.HasOwnAnswer)
                                    {
                                        <li>
                                            <input type="radio" name=@question.Id value="custom" data-questionid="@question.Id"
                                                   for="@("customAnswer" + question.Id)" @(string.IsNullOrEmpty(question.UserAnswers?.SingleOrDefault()?.OwnAnswerText) == false ? "checked" : "")
                                                   @(question.IsRequired == true ? "data-val-required = The IsSelected field is required. data-rule-customv = " + question.Id + " class=input-validation-error" : "") />
                                            <input id=@("customAnswer" + question.Id) type="text" value="@(question.UserAnswers?.SingleOrDefault()?.OwnAnswerText)" placeholder="Свой вариант." />
                                        </li>
                                    }
                                    break;
                                }
                            case 1: /*чекбокс*/
                                {
                                    @foreach (var Option in question.Options)
                                    {
                                        <li>
                                            <input type="checkbox" name=@question.Id value=@Option.Id
                                                   @(question.UserAnswers?.SingleOrDefault()?.OptionsForAnswers?.Any(ob => ob.OptionId == Option.Id) == true ? "checked" : "")
                                                   @(question.IsRequired == true ? "data-val-required = The IsSelected field is required. data-rule-customv = " + question.Id + " class=input-validation-error" : "") />
                                            <span>@Option.Text</span>
                                        </li>
                                    }
                                    @if (question.HasOwnAnswer)
                                    {
                                        <li>
                                            <input type="checkbox" name=@question.Id value="custom" data-questionid="@question.Id"
                                                   for="@("customAnswer" + question.Id)" @(string.IsNullOrEmpty(question.UserAnswers?.SingleOrDefault()?.OwnAnswerText) == false ? "checked" : "")
                                                   @(question.IsRequired == true ? "data-val-required = The IsSelected field is required. data-rule-customv = " + question.Id + " class=input-validation-error" : "") />
                                            <input id=@("customAnswer" + question.Id) type="text" value="@(question.UserAnswers?.SingleOrDefault()?.OwnAnswerText)" placeholder="Свой вариант." />
                                        </li>
                                    }
                                    break;
                                }
                            case 2: /*Только текстовый ответ*/
                                {
                                    <li>
                                        <input id="@question.Id" data-mycastomtextanswer="trye" type="text" value="@(question.UserAnswers?.SingleOrDefault()?.OwnAnswerText)" placeholder="" />
                                    </li>
                                    break;
                                }
                            default:
                                break;
                        }

                    </ul>
                    <span id="@("ErrorMessage" + question.Id)" style="color:red; display:none;">Необходимо дать ответ на этот вопрос!</span>
                </div>
            }
        </div>
        <input type="submit" id="submitButton" value="Отправить" style="margin:30px;" />
    </form>
</div>
<script type="text/javascript">
    $(function () {
        // Валидатор
        jQuery.validator.addMethod("customv", function (value, element, params) {
            let errMessageBox = $('#ErrorMessage' + params);
            if ($('input[name="' + params + '"]:checked').length > 0) {
                errMessageBox.hide();
                return true;
            }
            errMessageBox.show();
            return false;
        }, jQuery.validator.format(""));

        $('#questonForm').submit(function () {
            event.preventDefault();
            if (!$('form').validate().form()) { // проверили валидацию
                return;
            }
            let json = '{ "surveyId": "@Model.Id", "anew": "@ViewBag.anew", "data": { '; // формируем тело запроса
            // ищем все радиобаттоны и чекбоксы(типы 0 и 1)
            let inputArr = $('input:radio, input:checkbox');
            let index = 0;
            for (let i = 0; i < inputArr.length; i++) {
                if (inputArr[i].checked == true) {
                    if (inputArr[i].value == 'custom') {
                        json += ' "' + index++ + '": { "type": "custom", "questionId": "' + inputArr[i].getAttribute('name') +'", "text": "' + $('#' + inputArr[i].getAttribute('for')).val() + '"}, ';
                    } else {
                        json += ' "' + index++ + '": { "type": "standart", "questionId": "' + inputArr[i].getAttribute('name') +'", "optionId": "' + inputArr[i].value + '"}, ';
                    }
                }
            }
            // проверяем текстовые ответы(тип 2)
            let textBoxArr = $('input[data-mycastomtextanswer="trye"]');
            for (let i = 0; i < textBoxArr.length; i++) {
                json += ' "' + index++ + '": { "type": "custom", "questionId": "' + textBoxArr[i].id + '", "text": "' + textBoxArr[i].value + '"}, ';

            }
            
            json = json.substring(0, json.length - 2) + '}}'; // заканчиваем формирование json
            $.ajax({ // отправляем запрос
                type: 'POST',
                url:  '@Url.Action("SaveResult", "Survey")',//'SaveResult',
                data: json,
                contentType: "application/json",
                dataType: 'text',
                success: function (data) {
                    let res = JSON.parse(data);
                    if (res.ok) {
                        window.location = res.newUrl;
                    } else {
                        alert("Произошел сбой");
                    }
                },
                error: function () {
                    alert("Произошел сбой");
                }
            });
        })
    })
</script>